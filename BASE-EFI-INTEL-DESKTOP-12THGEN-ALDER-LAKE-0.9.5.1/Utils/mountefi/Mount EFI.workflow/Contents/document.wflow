<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>512</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run {input, parameters}	# Hacky nonsense to export paths that aren't normally available	set export to "export PATH=/usr/local/bin:/usr/local/sbin/:$PATH; "	# Try to get the system python versions - starting with py 3	set python to ""	repeat with py in {"python3", "python"}		try			set pypath to do shell script export &amp; "which " &amp; py			if pypath is "/usr/bin/python3" then				# Check if we're running 10.15 or newer - and verify "xcode-select -p"				# runs properly before allowing the stub				if (do shell script "sw_vers -productVersion") â‰¥ "10.15" then					do shell script "xcode-select -p"				end if			end if			do shell script export &amp; "/usr/bin/env " &amp; py &amp; " -V"			set python to py			exit repeat		on error errorMsg			# Didn't resolve - onto the next		end try	end repeat	if python is "" then		my print_error("Could not locate python3 or python via /usr/bin/env!", "Please download and install the latest from python.org")		return	end if	# If we got here - we have a python version to run.	# Organize the input paths	set passed_paths to ""	repeat with the_path in input		set the_text to quoted form of POSIX path of (the_path as text) as string		set passed_paths to passed_paths &amp; " " &amp; the_text	end repeat	# Let's make sure we have disk.py file	set target to "disk.py"	# Get the contents of the ~/Library/Services folder, and look for disk.py to run	set services to POSIX path of (path to home folder) &amp; "Library/Services/"	set quick_action_list to do shell script "ls -1 " &amp; quoted form of services	set quick_actions to paragraphs of quick_action_list	repeat with qa in quick_actions		set test_path to services &amp; qa &amp; "/Contents/Scripts/" &amp; target		if my check_exists(test_path) is "0" then			# We got a valid path - let's run it			do shell script export &amp; "/usr/bin/env " &amp; python &amp; " " &amp; quoted form of test_path &amp; passed_paths			return		end if	end repeat	# If we got here - then we didn't find the quick action	my print_error("Required files were not found!", "Please reinstall the latest Mount EFI quick action from https://github.com/corpnewt/MountEFI")	returnend runon check_exists(path)	# Quick one-liner to abuse bash and see if a file/folder exists	return do shell script "if [[ -e " &amp; quoted form of path &amp; " ]]; then echo 0; else echo 1; fi"end check_existson print_error(header, footer)	beep	display alert header &amp; "" &amp; footerend print_error</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>34AED1F9-B31F-4927-A2F3-43392E378CAC</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>EAB751F1-47E9-4256-9F92-ED4CD9CF95F5</string>
				<key>UUID</key>
				<string>FDE567E1-0DA9-43F5-B7DC-9D30FD0B8553</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>301.500000:558.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleIDsByPath</key>
		<dict/>
		<key>applicationPaths</key>
		<array/>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject.folder</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>15</integer>
		<key>processesInput</key>
		<integer>0</integer>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject.folder</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>systemImageName</key>
		<string>NSTouchBarTransferDownload</string>
		<key>useAutomaticInputType</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
